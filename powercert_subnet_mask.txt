SUBNET MASK

	Avant de définir ce qu'est un masque de sous-réseau, il est important de définir ce qu'est une adresse IP. Une adresse IP, pour Internet Protocol, est une adresse numérique et un identificateur pour un ordinateur ou un appareil sur un réseau. Tout appareil doit avoir une adresse IP pour communiquer. Pour être spécifique, on s'intéresse ici aux adresses IPv4, c'est-à-dire une adresse numérique de 32-bits représentée sous la forme de 4 nombres séparés par des points. Chaque groupe de nombre séparé par un point s'appelle un octet et chacun d'eux peut prendre une valeur comprise entre 0 et 255. Une adresse IP est décomposée en deux parties : la partie réseau et la partie hôte. La partie réseau désigne l'identifiant du réseau attribué à celui-ci, de ce fait tout réseau possèdera une adresse unique. L'adresse hôte, de son côté, correspond à ce qui est attribué à l'hôte au sein d'un réseau, comme des ordinateurs, des serveurs, des tablettes, des routeurs, et ainsi de suite. Comme pour les réseaux, chaque hôte possèdera une adresse unique. Afin de pouvoir identifier quelle partie d'une adresse IP correspond au réseau, et quelle partie correspond à l'hôte il existe ce que l'on appelle les masques de sous-réseau. 
	Les masques de sous-réseau sont constitués de nombres dont la forme ressemble à celle d'une adresse IP et permet de révéler combien de bits d'une adresse IP sont utilisés pour le réseau en masquant une portion de celle-ci. Cependant, dans l'univers des ordinateurs et réseau, les adresses IP et masques de sous-réseau en format décimal sont dénués de sens puisqu'ils ne peuvent les lire qu'en base binaire ; Les nombres en base binaire, que l'on désigne comme des bits, ne peuvent prendre que les valeurs 0 ou 1. 
	>De ce fait l'adresse IP 192.168.0.1 correspondra sous forme binaire à l'adresse 
		11000000.10101000.00000000.00000001
	Et l'adresse du masque de sous-réseau 255.255.255.0 à
		11111111.11111111.11111111.00000000

	Mais comment réussir à récupérer la forme binaire des adresses IP et masques de sous-réseau écrites en base décimale? Pour cela, il faut s'appuyer sur la charte 8-bit, et le rang de chaque bit dans un octet (ou byte) correspond à un nombre déterminé par la 2 à la puissance de la position du bit. Ainsi la charte couvre les nombres allant de 2^0, soit 1, à 2^7, soit 128. Ou bien on peut également considérer que l'on part de la valeur 1 et que le nombre suivant correspondra toujours au résultat précédent doublé. Par ordre décroissant, on trouve donc dans la charte 8-bit les nombres 128, 64, 32, 16, 8, 4, 2 et 1. Dans un octet, si le nombre est un 1, alors celui auquel il correspond se trouve au même rang que lui, par comparaison dans la charte 8-bit ; Si le nombre en revanche est un 0, alors cela signifie que le nombre correspondant au rang auquel il se trouve ne compte pas. Par la manipulation des 0 et des 1 dans un octet, il est possible d'obtenir tout nombre se situant entre 0 et 255. 
	Ainsi, en reprenant l'exemple précédent, le premier octet de l'adresse a pour valeur 192. Pour obtenir ce résultat, il faut additionner 128 et 64. Par comparaison avec la charte 8-bit, on obtient donc en binaire le nombre 11000000, étant donné que seulement les bits aux rangs de 128 et de 64 sont comptés, donc à 1.
	Le deuxième octet a pour valeur 168, qui correspond à l'addition de 128, 32 et 8. Par comparaison une nouvelle fois avec la charte 8-bit, on obtient le nombre 10101000, comme uniquement les bits aux rangs de 128, 32 et 8 sont comptés.
	Les troisième et quatrième octets ne sont pas les plus compliqués à traduire étant donné que pour le troisième, il vaut 0. Cela signifie donc que tous les bits de l'octet sont à 0 : on obtient donc 00000000. Et le quatrième octet vaut 1, donc il n'y a que le premier bit qui est à 1 et on obtient 00000001.

	La conversion binaire d'un masque de sous réseau fonctionne exactement de la même manière : il suffit de se pencher sur l'octet et de s'appuyer sur la charte 8-bit pour en déduire quels bits sont à 1 et lesquels sont à 0. Pour reprendre notre cas de figure, les trois premiers octets sont à 255, ce qui signifie qu'il faut ajouter tous les nombres de la charte - c'est-à-dire 128, 64, 32, 8, 4, 2 et 1 - pour obtenir en résultat 255. Cela signifie donc que leur équivalent binaire aura pour valeur 11111111.
	A partir de la conversion en binaire de l'adresse IP et du masque de sous-réseau, il suffit de placer l'une au dessus de l'autre pour remarquer jusqu'à quel bit le masque de sous-réseau est à 1 afin de déterminer la séparation entre l'adresse du réseau et l'adresse de l'hôte. En effet, partout où l'adresse binaire du masque de sous-réseau est à 1, alors cela désigne la partie réseau, et partout où les bits sont à 0, cela indique l'adresse hôte. Ainsi, en reprenant notre exemple précédent et en croisant les bits, on constate que la partie réseau de l'adresse 192.168.0.1 ayant pour masque de sous-réseau 255.255.255.0 est 192.168.0 et le dernier octet, ici 1, correspond à l'adresse de l'hôte.
	Prenons un deuxième exemple avec l'adresse IP 172.68.4.3 et le masque de sous-réseau 255.255.0.0, puis  convertissons-les : on obtient donc respectivement les adresses 10101100.01000100.00000100.00000011 et 11111111.11111111.00000000.00000000. Dans ce cas de figure, ce sont les deux premiers octets du masque de sous-réseau qui valent 255 et les deux derniers qui valent 0. Si l'on croise entre les deux adresses, tous rangs auxquels les bits du masque de sous-réseau sont à 1, on constate que l'adresse réseau correspond aux deux premiers octets, soit 172.68 et l'adresse hôte, aux deux derniers, c'est-à-dire 4.3.
	Dans le cadre d'un troisième exemple, prenons l'adresse IP 10.0.0.4 et le masque de sous-réseau 255.0.0.0. On remarque que seulement le premier octet du masque de sous-réseau est à 255, et les trois autres à 0. En convertissant les deux adresses en binaire et en croisant les bits, cela révèle que l'adresse réseau n'occupe que le premier octet, et que les trois derniers concernent donc l'adresse de l'hôte.

	Comme vous l'avez probablement constaté, s'informer sur quelle partie d'une adresse IP concerne l'adresse réseau et l'adresse hôte est une tâche assez simple lorsque les masques de sous-réseau sont standard. En effet, simplement en s'intéressant à un masque du type 255.0.0.0, 255.255.0.0 ou encore 255.255.255.0, on sait déjà d'avance que l'équivalent binaire de chacun des octets valant 255 sera équivalent au nombre binaire 1111111. Mais dans le cas où le masque de sous-réseau d'une adresse IP serait 255.255.224.0, la tâche de différencier les deux parties de l'adresse IP en question est plus complexe. La traduction binaire de ce masque de sous réseau est alors 11111111.11111111.11100000.00000000 : les deux premiers octets sont toujours à 1, par contre sur le troisième, en partant de la gauche, seulement les 3 premiers bits le sont. Si l'on s'appuie sur la charte 8-bits, on constate que les bits en question correspondent aux nombres 128, 64 et 32 qui lorsqu'ils sont ajoutés donnent bien 224. De ce fait, les 19 premiers bits de l'adresse IP correspondent à l'adresse réseau, et les 13 derniers pour l'hôte.

	Mais pourquoi une adresse IP est-elle séparée en deux parties, avec l'une pour le réseau et l'autre pour l'hôte? Pourquoi ne pas tout simplement disposer d'une adresse hôte attribuée de manière unique à chaque appareil? La raison pour laquelle une adresse IP dispose d'une adresse réseau et d'une adresse hôte est la manageabilité et pour scinder un réseau large en plusieurs réseaux plus petits. Le processus de découper un réseau plus grand en plus petits réseaux s'appelle le subnetting. Partons du principe que les réseaux de petite envergure n'existent pas et qu'une organisation possède un grand nombre de machines en un seul grand réseau. Afin de pouvoir communiquer avec un autre ordinateur, une machine doit en premier déterminer l'endroit où il se trouve et comment l'atteindre. Pour ce faire, il utilise un broadcast, ou une diffusion, qui consiste à diffuser des données à tous les ordinateurs d'un réseau afin de pouvoir localiser l'appareil avec lequel il souhaite communiquer. De ce fait si l'ordinateur indiqué A désire établir une communication avec l'ordinateur B, il va diffuser un message en Broadcast demandant à la machine ayant telle adresse IP attribuée de s'identifier et de se manifester. L'inconvénient majeur de cette méthode est que tous les ordinateurs du réseau vont recevoir le message de diffusion étant donné qu'ils se trouvent tous sur le même. On peut alors imaginer à quel point cela peut être problématique si toutes les machines diffusaient des requêtes sur le même réseau : ce serait le chaos complet. Dans ces cas, le réseau ralentirait voire risquerait de s'arrêter, à cause de l'immense quantité de trafic de diffusion. Additionnellement, si un problème venait à se produire sur le réseau, il serait très compliqué de mettre le doigt dessus à juger de la taille importante de celui-ci. 
	De ce fait, afin d'éviter ces complications, le réseau doit être scindé en plus petits réseaux physiquement par le biais de l'utilisation de routeurs. De ce fait, par l'emploi de ces derniers, cela permettrait de calmer le problème de trafic excessif puisque les broadcast n'ont pas la possibilité d'aller au-delà des routeurs et ne reste qu'au sein d'un réseau. Dès lors, au lieu de disposer d'un seul et unique réseau, il a été concassé en 6 sous-réseaux, ou subnets, que l'on notera désignera par les lettres allant de A à F. Dans cette configuration, si un ordinateur du réseau A, que l'on nommera A2, souhaite communiquer avec un ordinateur du réseau F, que l'on désignera par F1, il va en premier temps diffuser un broadcast qu'uniquement les machines du réseau A vont pouvoir recevoir. Toutefois, étant donné que la cible n'est pas située dans le réseau, les données seront envoyées au default gateway, ou passerelle par défaut, qui se trouve être le routeur. Celui-ci va intelligemment router les données vers la destination.

	Le principe de sous-réseau peut être utilisé dans d'autres contextes et pour cela nous prendrons le cas de figure suivant : on dispose d'une petite entreprise qui possède un total de 12 machines sur un seul réseau et celles-ci appartiennent à différents services. Admettons désormais que cette entreprise souhaite séparer les ordinateurs apparentés à chaque services dans 3 réseaux différents, donc séparer un seul grand réseau en 3 plus petits. Pour ce faire, il faut réaliser du subnetting et cela consiste à changer le masque de sous-réseau par défaut en empruntant certain des bits qui étaient au préalable destinés aux hôtes afin de créer des sous-réseaux. Dans notre exemple, nous allons donc modifier le masque de sous-réseau originel 255.255.255.0, équivalent à 11111111.11111111.11111111.00000000 en binaire, pour transformer certains 0 du dernier octet en 1. Si on laisse le masque de sous-réseau tel-quel, il nous donnera un seul réseau de 256 hôtes auquel on soustrait 2 pour respectivement l'adresse de réseau et de broadcast : cela donne donc un réseau de 254 hôtes disponibles. Il faut toutefois changer le masque de sous-réseau afin qu'on puisse produire les 3 réseaux dont nous avons besoin : pour ce faire, empruntons un premier bit de la partie hôte du masque. Le nouveau masque de sous-réseau sera donc de la forme 255.255.255.128 puisque son équivalent binaire est 11111111.11111111.11111111.10000000. En empruntant 1 bit de la partie hôte du masque, on va pouvoir diviser le réseau en deux. Dès lors, au lieu d'avoir 1 seul réseau de 254 hôtes, le masque de sous-réseau nous en donnera 2 subnets de 126 hôtes chacun. 
	En empruntant un deuxième bit du masque, celui-ci sera de la forme 255.255.255.192, étant donné que son équivalent en binaire vaut 11111111.11111111.11111111.11000000. Cet emprunt de deuxième bit de la partie hôte permet de découper le réseau en 4 sous-réseaux de 62 hôtes chacuns.
	Si l'on procède de même et que l'on emprunte un troisième bit, le masque de sous-réseau sera donc 255.255.255.224, comme en binaire il vaut 11111111.11111111.11111111.11100000. On obtiendra donc 8 sous-réseaux de 30 hôtes chacun.
	De fil en aiguille, on peut procéder ainsi jusqu'à emprunter en tout 6 bits de la portion hôte du masque de sous-réseau par défaut qui devient alors notre limite puisqu'il permet de découper le réseau en 64 réseaux de 2 hôtes chacun. En effet, si l'on change un septième bit, le masque de sous-réseau permettra de scinder le réseau en 128 réseaux, mais de 0 hôtes, ce qui n'aura pas d'utilité. Voici un tableau permettant de comprendre plus simplement la correspondance entre l'emprunt d'un bit supplémentaire d'un masque de sous-réseau avec son écriture décimale, binaire, le nombre de sous-réseaux produits et le nombre d'hôtes qu'ils peuvent contenir.
		<CORRESPONDANCE>
	Pour revenir à notre cas de figure, si nous voulions découper le réseau en 3, nous devrions emprunter 2 bits à la partie hôte du masque de sous-réseau par défaut. De ce fait, bien que nous ne nécessitions que 3 réseaux, le masque de sous-réseau 255.255.255.192 nous donnera au moins 4 réseaux avec lesquels travailler et distribuer les machines de chaque service.

	Les adresses IP et masques de sous-réseau sont déclinés en 5 classes différentes allant de A à E, toutefois 3 de ces classes sont à usage commercial. La charte des adresses IP et des masques de sous-réseau par défaut, soit les classes A, B et C est la suivante :
		<CHARTE MASQUE SOUS RESEAU>
Vous pouvez savoir à quelle classe appartient une adresse IP en vous penchant sur le nombre contenu dans le premier octet et le masque de sous-réseau de l'adresse.
	Lorsqu'une organisation va avoir besoin de réseau, elle va devoir disposer d'adresses IP en fonction de son activité et de son nombre d'hôte, donc de son envergure. De ce fait, si une organisation possède un très grand nombre d'hôtes, elles auront besoin d'une adresse IP de classe A qui peuvent produire jusqu'à 16 million d'adresses pour des hôtes. On peut d'ailleurs s'en apercevoir en observant le masque de sous-réseau et le fait que 3 octets fassent partie de la portion hôte. Un exemple d'entreprise qui nécessiterait autant d'adresses IP pourrait par exemple être un fournisseur internet étant donné qu'ils doivent être en mesure de distribuer plusieurs millions d'adresses IP à leurs clients.
	De son côté, la classe B peut produire jusqu'à 65.000 hôtes et est généralement adaptée pour les organisations d'envergure moyenne à large. La classe C va pouvoir produire 254 hôtes et est utilisée pour fournir des adresses à des petites entreprises ou des habitations qui n'ont donc pas beaucoup d'hôtes.

	Les masques de sous-réseau peuvent toutefois être exprimés d'une autre manière que celle présentée précédemment, et celle-ci est intitulée CIDR, pour Classless Inter-Domain Routing et aussi connue sous l'appellation slash notation. Il s'agit d'une méthode plus courte pour représenter un masque de sous-réseau en écrivant un slash suivi d'un nombre indiquant le quantité de bit à 1 du masque, le tout placé derrière une adresse IP. De ce fait, si vous apercevez une adresse sous la forme 192.168.0.1/24, cela signifiera que la partie réseau de l'adresse correspond aux 24 premiers bits, donc que l'adresse hôte ne concerne que les 8 derniers. L'adresse IP en question aura donc pour masque de sous-réseau sous forme "standard" 255.255.255.0. Si l'on reprend la même adresse, mais sous la notation CIDR 192.168.0.1/25, cela voudra dire que le masque de sous-réseau fait 25 bits de long et correspondra à la forme "standard" 255.255.255.128. Une notation CIDR /8 indiquera que la longueur du masque sera de 8 bits, soit 255.0.0.0.